# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/yazi.json"
[mgr]
ratio          = [ 1, 4, 3 ]
sort_by        = "alphabetical"
sort_sensitive = false
sort_reverse 	 = false
sort_dir_first = true
sort_translit  = false
linemode       = "none"
show_hidden    = true
show_symlink   = true
scrolloff      = 5
mouse_events   = [ "click", "scroll" ]
title_format   = "Yazi: {cwd}"

[preview]
wrap            = "no"
tab_size        = 2
max_width       = 600
max_height      = 900
cache_dir       = ""
image_delay     = 30
image_filter    = "triangle"
image_quality   = 75
sixel_fraction  = 15
ueberzug_scale  = 1
ueberzug_offset = [ 0, 0, 0, 0 ]

[opener]
edit = [
	{ run = '${EDITOR:-nvim} "$@"', desc = "$EDITOR", block = true, for = "unix" },
	{ run = 'code %*',    orphan = true, desc = "code",           for = "windows" },
	{ run = 'code -w %*', block = true,  desc = "code (block)",   for = "windows" },
]

# Edytor tekstu - nvim
text = [
	{ run = 'nvim "$@"', desc = "Edit with nvim", block = true, for = "unix" }
]

# Przeglądarka obrazów - nsxiv
image = [
	{ run = 'nsxiv "$@"', desc = "View with nsxiv", orphan = true, for = "unix" },
	{ run = 'nsxiv -f "$@"', desc = "View fullscreen with nsxiv", orphan = true, for = "unix" },
	{ run = 'nsxiv -t "$@"', desc = "View thumbnails with nsxiv", orphan = true, for = "unix" }
]

# Przeglądarka PDF - zathura
pdf = [
	{ run = 'zathura "$@"', desc = "View with zathura", orphan = true, for = "unix" }
]

# Odtwarzacz wideo/audio
video = [
	{ run = 'mpv "$@"', desc = "Play with mpv", orphan = true, for = "unix" },
	{ run = 'vlc "$@"', desc = "Play with VLC", orphan = true, for = "unix" }
]

# Dokumenty Office
office = [
	{ run = 'libreoffice "$@"', desc = "Open with LibreOffice", orphan = true, for = "unix" }
]

# Pliki archiwum
archive = [
	{ run = 'ark "$@"', desc = "Open with Ark", orphan = true, for = "unix" },
	{ run = 'file-roller "$@"', desc = "Open with file-roller", orphan = true, for = "unix" }
]

# Przeglądarka web dla HTML
web = [
	{ run = 'firefox "$@"', desc = "Open with Firefox", orphan = true, for = "unix" },
	{ run = 'google-chrome-stable "$@"', desc = "Open with Google Chrome", orphan = true, for = "unix" },
	{ run = 'chromium "$@"', desc = "Open with Chromium", orphan = true, for = "unix" }
]

open = [
	{ run = 'xdg-open "$1"',                desc = "Open", for = "linux" },
	{ run = 'open "$@"',                    desc = "Open", for = "macos" },
	{ run = 'start "" "%1"', orphan = true, desc = "Open", for = "windows" },
]

reveal = [
	{ run = 'xdg-open "$(dirname "$1")"',           desc = "Reveal", for = "linux" },
	{ run = 'open -R "$1"',                         desc = "Reveal", for = "macos" },
	{ run = 'explorer /select,"%1"', orphan = true, desc = "Reveal", for = "windows" },
	{ run = '''exiftool "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show EXIF", for = "unix" },
]

extract = [
	{ run = 'ya pub extract --list "$@"', desc = "Extract here", for = "unix" },
	{ run = 'ya pub extract --list %*',   desc = "Extract here", for = "windows" },
]

play = [
	{ run = 'mpv --force-window "$@"', orphan = true, for = "unix" },
	{ run = 'mpv --force-window %*', orphan = true, for = "windows" },
	{ run = '''mediainfo "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show media info", for = "unix" },
]

[open]
rules = [
	# Folder
	{ name = "*/", use = [ "edit", "open", "reveal" ] },
	
	# Pliki tekstowe - nvim
	{ mime = "text/*", use = [ "text", "edit", "reveal" ] },
	{ name = "*.{txt,md,markdown,rst,org,conf,config,ini,cfg,log,json,yaml,yml,xml,toml}", use = [ "text", "edit", "reveal" ] },
	
	# Obrazy - nsxiv
	{ mime = "image/*", use = [ "image", "open", "reveal" ] },
	{ name = "*.{jpg,jpeg,png,gif,bmp,tiff,tif,webp,svg,ico,avif,heic,heif}", use = [ "image", "open", "reveal" ] },
	
	# PDF - zathura
	{ mime = "application/pdf", use = [ "pdf", "open", "reveal" ] },
	{ name = "*.pdf", use = [ "pdf", "open", "reveal" ] },
	
	# Wideo i audio - mpv
	{ mime = "{audio,video}/*", use = [ "video", "play", "reveal" ] },
	{ name = "*.{mp4,mkv,avi,mov,wmv,flv,webm,m4v,3gp,ogv}", use = [ "video", "play", "reveal" ] },
	{ name = "*.{mp3,flac,ogg,wav,aac,m4a,opus,wma}", use = [ "video", "play", "reveal" ] },
	
	# Dokumenty Office
	{ name = "*.{doc,docx,xls,xlsx,ppt,pptx,odt,ods,odp}", use = [ "office", "open", "reveal" ] },
	
	# HTML - przeglądarka
	{ name = "*.{html,htm}", use = [ "web", "text", "open", "reveal" ] },
	
	# Archiwa
	{ mime = "application/{,g}zip", use = [ "archive", "extract", "reveal" ] },
	{ mime = "application/x-{tar,bzip*,7z-compressed,xz,rar}", use = [ "archive", "extract", "reveal" ] },
	{ name = "*.{zip,rar,7z,tar,gz,bz2,xz,tar.gz,tar.bz2,tar.xz}", use = [ "archive", "extract", "reveal" ] },
	
	# Pliki wykonywalne
	{ name = "*.{sh,py,pl,rb,js,ts}", use = [ "text", "edit", "reveal" ] },
	
	# JSON
	{ mime = "application/{json,x-ndjson}", use = [ "text", "edit", "reveal" ] },
	{ mime = "*/javascript", use = [ "text", "edit", "reveal" ] },
	
	# Pliki systemowe
	{ name = "*.{desktop,service}", use = [ "text", "edit", "reveal" ] },
	
	# Empty file
	{ mime = "inode/x-empty", use = [ "text", "edit", "reveal" ] },
	
	# Fallback
	{ name = "*", use = [ "open", "reveal" ] },
]

[tasks]
micro_workers    = 10
macro_workers    = 25
bizarre_retry    = 5
image_alloc      = 536870912  # 512MB
image_bound      = [ 0, 0 ]
suppress_preload = false

[plugin]
fetchers = [
	# Mimetype
	{ id = "mime", name = "*", run = "mime", if = "!mime", prio = "high" },
]
preloaders = [
	# Image
	{ mime = "image/{avif,hei?,jxl,svg+xml}", run = "magick" },
	{ mime = "image/*", run = "image" },
	# Video
	{ mime = "video/*", run = "video" },
	# PDF
	{ mime = "application/pdf", run = "pdf" },
	# Font
	{ mime = "font/*", run = "font" },
	{ mime = "application/vnd.ms-opentype", run = "font" },
]
previewers = [
	{ name = "*/", run = "folder", sync = true },
	# Code
	{ mime = "text/*", run = "code" },
	{ mime = "*/{xml,javascript,x-wine-extension-ini}", run = "code" },
	# JSON
	{ mime = "application/{json,x-ndjson}", run = "json" },
	# Image
	{ mime = "image/{avif,hei?,jxl,svg+xml}", run = "magick" },
	{ mime = "image/*", run = "image" },
	# Video
	{ mime = "video/*", run = "video" },
	# PDF
	{ mime = "application/pdf", run = "pdf" },
	# Archive
	{ mime = "application/{,g}zip", run = "archive" },
	{ mime = "application/x-{tar,bzip*,7z-compressed,xz,rar,iso9660-image}", run = "archive" },
	# Font
	{ mime = "font/*", run = "font" },
	{ mime = "application/vnd.ms-opentype", run = "font" },
	# Empty file
	{ mime = "inode/x-empty", run = "empty" },
	# Fallback
	{ name = "*", run = "file" },
]

[input]
cursor_blink = false
# cd
cd_title  = "Change directory:"
cd_origin = "top-center"
cd_offset = [ 0, 2, 50, 3 ]
# create
create_title  = ["Create:", "Create (dir):"]
create_origin = "top-center"
create_offset = [ 0, 2, 50, 3 ]
# rename
rename_title  = "Rename:"
rename_origin = "hovered"
rename_offset = [ 0, 1, 50, 3 ]
# filter
filter_title  = "Filter:"
filter_origin = "top-center"
filter_offset = [ 0, 2, 50, 3 ]
# find
find_title  = [ "Find next:", "Find previous:" ]
find_origin = "top-center"
find_offset = [ 0, 2, 50, 3 ]
# search
search_title  = "Search via {n}:"
search_origin = "top-center"
search_offset = [ 0, 2, 50, 3 ]
# shell
shell_title  = [ "Shell:", "Shell (block):" ]
shell_origin = "top-center"
shell_offset = [ 0, 2, 50, 3 ]

[confirm]
# trash
trash_title 	= "Trash {n} selected file{s}?"
trash_origin	= "center"
trash_offset	= [ 0, 0, 70, 20 ]
# delete
delete_title 	= "Permanently delete {n} selected file{s}?"
delete_origin	= "center"
delete_offset	= [ 0, 0, 70, 20 ]
# overwrite
overwrite_title   = "Overwrite file?"
overwrite_content = "Will overwrite the following file:"
overwrite_origin  = "center"
overwrite_offset  = [ 0, 0, 50, 15 ]
# quit
quit_title   = "Quit?"
quit_content = "The following task is still running, are you sure you want to quit?"
quit_origin  = "center"
quit_offset  = [ 0, 0, 50, 15 ]

[select]
open_title  = "Open with:"
open_origin = "hovered"
open_offset = [ 0, 1, 50, 7 ]

[which]
sort_by      	 = "none"
sort_sensitive = false
sort_reverse 	 = false
sort_translit  = false

[log]
enabled = false
